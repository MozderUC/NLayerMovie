@model NLayerMovie.WEB.Models.MovieViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

@using Newtonsoft.Json;

<div>
    <h4>Movie</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReleaseDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Genre)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Genre)
        </dd>
    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}

<script type="text/javascript">
    function decodeHtml(html) {
        var txt = document.createElement("textarea");
        txt.innerHTML = html;
        return txt.value;
    }

    $(function () {

        $('#comments-container').comments({
           
            profilePictureURL: 'https://viima-app.s3.amazonaws.com/media/public/defaults/user-icon.png',
            roundProfilePictures: true,
            textareaRows: 1,
            enableAttachments: true,
            maxRepliesVisible: 3,

            getComments: function (success, error) {
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                $.ajax({
                    type: "post",
                    data: {
                        __RequestVerificationToken: token                       
                    },
                    url: "/Comment/getComments?entityType=@Model.entityType&entityID=@Model.ID",
                    success: function (result) {
                        var json = JSON.parse(result)
                        if (json['success']) {
                            success(json['commentsGetViewModel'])
                        }
                        else {
                            alert(json['message']);
                        }                        
                    },
                    error: error
                });
            },

            postComment: function (commentJSON, success, error) {
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                commentJSON['__RequestVerificationToken'] = token;
                $.ajax({
                    type: 'post',
                    url: '/Comment/postComment?entityID=@Model.ID&entityType=@Model.entityType',
                    data: commentJSON,
                    success: function (result) {
                        var json = JSON.parse(result)
                        if (json['success']) {
                            success(json)
                        }
                        else {
                            alert(json['message']);
                        }
                    },
                    error: error
                });
            },

            upvoteComment: function (commentJSON, success, error) {
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                var upvotesURL = '/Comment/upvoteComment/' + commentJSON.id;
                $.ajax({
                    type: 'post',
                    url: upvotesURL,
                    data: {
                        __RequestVerificationToken: token
                    },
                    success: function (result) {
                        var json = JSON.parse(result)
                        if (json['success']) {
                            success(commentJSON)
                        }
                        else {
                            alert(json['message']);
                        }                        
                    },
                    error: error
                });
            }

        });
    });
</script>

<div id="comments-container"></div>